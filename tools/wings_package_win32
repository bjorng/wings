#!/bin/bash
#
# Script for creating a self-contained Wings package for Windows.
#
# $Id: wings_package_win32,v 1.22 2003/09/11 15:17:15 bjorng Exp $
#
OS=`uname -o`
if [ X$OS != XCygwin ]; then
    echo "This script is supposed to be run in the" \
	 "cygwin environement on windows only." >&2
    exit 1
fi

if [ -z "$SF_PATH" ]; then
    SF_PATH="c:/cygwin/home/Bjorn Gustavsson"
fi

# Configurable stuff.
WINGS_PATH="$SF_PATH/wings_releases"
INSTALL=/usr/bin/install
DEST_ROOT="$WINGS_PATH/wings3d"
NSIS=`which makensis 2>/dev/null`
if [ -z "$NSIS" ]; then
    NSIS=c:/progra~1/nsis/makensis
fi
# End of configureable stuff.

if [ -z "$ESDL_PATH" ]; then
    echo "The environment variable ESDL_PATH must be set to " \
	 "the top of the ESDL installation." >&2
    exit 1
fi
ESDL_NAME=`basename $ESDL_PATH`

#
# Make sure we have a working GNU make.
#
echo -n "Checking make... "
CYGMAKE=`which make 2>/dev/null`
if [ -z "$CYGMAKE" ]; then
    echo "no."
    echo "Unable to find make. It seems you need to install more cygwin" \
	"packages..." >&2
    exit 1
fi
echo "ok"

ERLANG_PATH=`which erl`
ERLANG_PATH=`dirname $ERLANG_PATH`
ERLANG_PATH=`dirname $ERLANG_PATH`

# Copy the Wings application.

for file in "$WINGS_PATH"/wings-*; do
    if [ -d "$file" ]; then
        latest_wings=$file
    fi
done

WINGS_VSN=`echo "$latest_wings" | sed -e 's/.*wings-//'`
WINGS_APP=`basename "$latest_wings"`

cd "$latest_wings"
make
case $? in
    0) ;;
    *)
        echo "Failed to make Wings";
        exit 1 ;;
esac

cd "$latest_wings/win32"
nmake -nologo -f Makefile.win32

cd "$latest_wings/plugins_src/win32_file"
nmake -nologo

cd "$latest_wings"
dest="$DEST_ROOT"

$INSTALL -d "$dest"
$INSTALL -c -m 644 README AUTHORS license.terms vsn.mk "$dest"
$INSTALL -c -m 644 win32/wings.nsi "$dest"
$INSTALL -c -m 644 win32/Wings3D.exe "$dest"
$INSTALL -c -m 644 win32/wings.ico "$dest"
$INSTALL -c -m 644 win32/install.ico "$dest"

dest="$DEST_ROOT/lib/$WINGS_APP"

$INSTALL -d "$dest" "$dest/ebin" "$dest/patches"
$INSTALL -c -m 644 ebin/* "$dest/ebin"

$INSTALL -d "$dest/plugins/default" "$dest/plugins/fonts" \
 "$dest/plugins/import_export" "$dest/plugins/commands" \
 "$dest/plugins/primitives" "$dest/plugins/win32_file" \
 "$dest/plugins/autouv"
$INSTALL -c -m 644 plugins/default/wp9_dialogs.beam "$dest/plugins/default"
$INSTALL -c -m 644 plugins/fonts/* "$dest/plugins/fonts"
$INSTALL -c -m 644 plugins/import_export/* "$dest/plugins/import_export"
$INSTALL -c -m 644 plugins/commands/* "$dest/plugins/commands"
$INSTALL -c -m 644 plugins/primitives/* "$dest/plugins/primitives"
$INSTALL -c -m 644 plugins/win32_file/* "$dest/plugins/win32_file"
$INSTALL -c -m 644 plugins/autouv/* "$dest/plugins/autouv"

# Copy the relevant parts of Erlang/OTP.

src="$ERLANG_PATH"
dest="$DEST_ROOT"
erts_src=`echo "$src"/erts-*`
stdlib=`basename "$src"/lib/stdlib-*`
kernel=`basename "$src"/lib/kernel-*`

$INSTALL -d "$dest/bin" "$dest/lib/$stdlib/ebin" "$dest/lib/$kernel/ebin"
$INSTALL -c -m 644 "$src"/lib/kernel-*/ebin/* "$dest/lib/$kernel/ebin"
$INSTALL -c -m 644 "$src"/lib/stdlib-*/ebin/* "$dest/lib/$stdlib/ebin"

$INSTALL -c "$erts_src/bin/werl.exe" "$dest/bin"
$INSTALL -c "$erts_src/bin/erlexec.dll" "$dest/bin"
$INSTALL -c "$erts_src/bin/beam.dll" "$dest/bin"
$INSTALL -c -m 644 "$src/bin/start.boot" "$dest/bin"
$INSTALL -c "$erts_src/bin/inet_gethost.exe" "$dest/bin/inet_gethost.exe"
strip "$dest/bin/werl.exe"
strip "$dest/bin/erlexec.dll"
strip "$dest/bin/inet_gethost.exe"

# Copy the relevant parts of ESDL.
dest="$DEST_ROOT/lib/$ESDL_NAME"
$INSTALL -d "$dest/ebin" "$dest/priv"
$INSTALL -c -m 644  "$ESDL_PATH"/ebin/* "$dest/ebin"
$INSTALL -c -m 644  "$ESDL_PATH"/priv/sdl_driver.dll "$dest/priv"
$INSTALL -c -m 644  "$ESDL_PATH"/priv/SDL.dll "$dest/priv"
strip --strip-debug --strip-unneeded "$dest/priv/sdl_driver.dll"
rm -rf "$dest/ebin/sdl_audio.beam" "$dest/ebin/sdl_joystick.beam"

#
# Remove files from OTP not needed.
#
tools/wings_reduce_otp "$dest"

# Strip debug information from all beam files.
cd "$latest_wings"
erlc -o`cygpath -m /tmp` tools/strip.erl
cd "$DEST_ROOT"
erl -noshell -pa `cygpath -m /tmp` -run strip strip

# Run NSIS
cd "$DEST_ROOT"
"$NSIS" /DWINGS_VERSION=$WINGS_VSN wings.nsi
